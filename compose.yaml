services:
    mongoDB:
        image: mongo
        restart: "${RESTART_POLICY:-no}"
        healthcheck:
            test: ["CMD", "echo", "'db.runCommand(\"ping\").ok'", "|", "mongosh", "localhost:27017/test", "--quiet"]
            interval: 10s
            timeout: 10s
            retries: 5
            start_period: 40s
        environment:
            # These *INITDB* variables only used when the database is first initialized
            MONGO_INITDB_ROOT_USERNAME: "${MONGO_USERNAME}"
            MONGO_INITDB_ROOT_PASSWORD: "${MONGO_PASSWORD}"
        volumes:
            - type: bind
              source: ./mongo
              target: /data/db
        ports:
            # open a port on the localhost computer for using the API outside a docker container
            - "27017:27017"
        profiles: ["db"]

    djangoAPI:
        build: ./backend
        ports:
            - "8000:8000"
        environment:
            DJANGO_SECRET_KEY: "${DJANGO_SECRET_KEY}"
            MONGO_USERNAME: "${MONGO_USERNAME}"
            MONGO_PASSWORD: "${MONGO_PASSWORD}"
            MONGO_HOST: "${MONGO_HOST:-mongoDB}"

        volumes:
            # django-static is written at build time by the SpExWebsite Dockerfile
            - "django-static:/app/static_root:rw"
            - "./hypatia/HyData:/app/hypatia/HyData"
    nginx:
        image: nginx:latest
        restart: "${RESTART_POLICY:-no}"
        ports:
            - "80:80"
        volumes:
            - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
            # the Keys for https encryption
            - ssl_keys:/etc/letsencrypt
            # One the Server is needed to verify the challenge to website ownership
            - ssl_challenge:/var/www/certbot/.well-known:rw
            - "django-static:/django/static_root:ro"
        depends_on:
            djangoAPI:
                condition: service_healthy

    certbot:
        image: certbot/certbot
        volumes:
            - ssl_keys:/etc/letsencrypt:rw
            - ssl_challenge:/var/www/certbot/.well-known:rw
        command: ["certonly", "--webroot", "--webroot-path=/var/www/certbot", "--email", "chw3k5@gmail.com", "--agree-tos", "--no-eff-email", "-d", "hypatiacatalog.com", "-d", "www.hypatiacatalog.com"]
        depends_on:
            - nginx
        profiles: ["deploy"]

volumes:
    ssl_keys:
    ssl_challenge:
    django-static: